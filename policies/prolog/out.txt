{
  "modules": [
    {
      "module_name": "policy",
      "predicates": [
        {
          "arity": 0,
          "clauses": [
            {
              "body": {
                "subgoals": [
                  {
                    "goal": {
                      "arguments": [
                        {
                          "number_in_clause": 0,
                          "type": "variable"
                        }
                      ],
                      "functor": "endPrice",
                      "type": "compound"
                    },
                    "type": "goal"
                  },
                  {
                    "goal": {
                      "arguments": [
                        {
                          "number_in_clause": 0,
                          "type": "variable"
                        }
                      ],
                      "functor": "inputPayment",
                      "type": "compound"
                    },
                    "type": "goal"
                  }
                ],
                "type": "conjunction"
              },
              "head": {
                "module": "policy",
                "type": "atomic",
                "value": "inputPriceOk"
              },
              "index": 1
            }
          ],
          "predicate_name": "inputPriceOk"
        },
        {
          "arity": 1,
          "clauses": [
            {
              "body": {
                "subgoals": [
                  {
                    "goal": {
                      "arguments": [
                        {
                          "number_in_clause": 1,
                          "type": "variable"
                        }
                      ],
                      "functor": "monthlyConsumptions",
                      "type": "compound"
                    },
                    "type": "goal"
                  },
                  {
                    "subgoals": [
                      {
                        "goal": {
                          "arguments": [
                            {
                              "number_in_clause": 1,
                              "type": "variable"
                            },
                            {
                              "number_in_clause": 2,
                              "type": "variable"
                            }
                          ],
                          "functor": "sumOfMonthlyConsumptions",
                          "type": "compound"
                        },
                        "type": "goal"
                      },
                      {
                        "subgoals": [
                          {
                            "goal": {
                              "arguments": [
                                {
                                  "number_in_clause": 2,
                                  "type": "variable"
                                },
                                {
                                  "number_in_clause": 3,
                                  "type": "variable"
                                }
                              ],
                              "functor": "rollingConsumption",
                              "type": "compound"
                            },
                            "type": "goal"
                          },
                          {
                            "subgoals": [
                              {
                                "goal": {
                                  "arguments": [
                                    {
                                      "number_in_clause": 4,
                                      "type": "variable"
                                    }
                                  ],
                                  "functor": "currentConsumption",
                                  "type": "compound"
                                },
                                "type": "goal"
                              },
                              {
                                "subgoals": [
                                  {
                                    "goal": {
                                      "arguments": [
                                        {
                                          "number_in_clause": 3,
                                          "type": "variable"
                                        },
                                        {
                                          "number_in_clause": 5,
                                          "type": "variable"
                                        }
                                      ],
                                      "functor": "consumptionClass",
                                      "type": "compound"
                                    },
                                    "type": "goal"
                                  },
                                  {
                                    "subgoals": [
                                      {
                                        "goal": {
                                          "arguments": [
                                            {
                                              "number_in_clause": 3,
                                              "type": "variable"
                                            },
                                            {
                                              "number_in_clause": 4,
                                              "type": "variable"
                                            },
                                            {
                                              "number_in_clause": 6,
                                              "type": "variable"
                                            }
                                          ],
                                          "functor": "savingsClass",
                                          "type": "compound"
                                        },
                                        "type": "goal"
                                      },
                                      {
                                        "subgoals": [
                                          {
                                            "goal": {
                                              "arguments": [
                                                {
                                                  "number_in_clause": 7,
                                                  "type": "variable"
                                                }
                                              ],
                                              "functor": "priceBase",
                                              "type": "compound"
                                            },
                                            "type": "goal"
                                          },
                                          {
                                            "subgoals": [
                                              {
                                                "goal": {
                                                  "arguments": [
                                                    {
                                                      "number_in_clause": 7,
                                                      "type": "variable"
                                                    },
                                                    {
                                                      "number_in_clause": 6,
                                                      "type": "variable"
                                                    },
                                                    {
                                                      "number_in_clause": 5,
                                                      "type": "variable"
                                                    },
                                                    {
                                                      "number_in_clause": 8,
                                                      "type": "variable"
                                                    }
                                                  ],
                                                  "functor": "applySavingsSupport",
                                                  "type": "compound"
                                                },
                                                "type": "goal"
                                              },
                                              {
                                                "subgoals": [
                                                  {
                                                    "goal": {
                                                      "arguments": [
                                                        {
                                                          "number_in_clause": 9,
                                                          "type": "variable"
                                                        }
                                                      ],
                                                      "functor": "socialCreds",
                                                      "type": "compound"
                                                    },
                                                    "type": "goal"
                                                  },
                                                  {
                                                    "goal": {
                                                      "arguments": [
                                                        {
                                                          "number_in_clause": 8,
                                                          "type": "variable"
                                                        },
                                                        {
                                                          "number_in_clause": 9,
                                                          "type": "variable"
                                                        },
                                                        {
                                                          "number_in_clause": 0,
                                                          "type": "variable"
                                                        }
                                                      ],
                                                      "functor": "applySocialSupports",
                                                      "type": "compound"
                                                    },
                                                    "type": "goal"
                                                  }
                                                ],
                                                "type": "conjunction"
                                              }
                                            ],
                                            "type": "conjunction"
                                          }
                                        ],
                                        "type": "conjunction"
                                      }
                                    ],
                                    "type": "conjunction"
                                  }
                                ],
                                "type": "conjunction"
                              }
                            ],
                            "type": "conjunction"
                          }
                        ],
                        "type": "conjunction"
                      }
                    ],
                    "type": "conjunction"
                  }
                ],
                "type": "conjunction"
              },
              "head": {
                "arguments": [
                  {
                    "number_in_clause": 0,
                    "type": "variable"
                  }
                ],
                "functor": "endPrice",
                "module": "policy",
                "type": "compound"
              },
              "index": 1
            }
          ],
          "predicate_name": "endPrice"
        },
        {
          "arity": 4,
          "clauses": [
            {
              "body": {
                "goal": {
                  "arguments": [
                    {
                      "number_in_clause": 2,
                      "type": "variable"
                    },
                    {
                      "arguments": [
                        {
                          "number_in_clause": 0,
                          "type": "variable"
                        },
                        {
                          "number_in_clause": 1,
                          "type": "variable"
                        }
                      ],
                      "functor": "-",
                      "type": "compound"
                    }
                  ],
                  "functor": "is",
                  "type": "compound"
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "number_in_clause": 0,
                    "type": "variable"
                  },
                  {
                    "type": "atomic",
                    "value": "nominal"
                  },
                  {
                    "number_in_clause": 1,
                    "type": "variable"
                  },
                  {
                    "number_in_clause": 2,
                    "type": "variable"
                  }
                ],
                "functor": "applySupport",
                "module": "policy",
                "type": "compound"
              },
              "index": 1
            },
            {
              "body": {
                "subgoals": [
                  {
                    "goal": {
                      "arguments": [
                        {
                          "number_in_clause": 3,
                          "type": "variable"
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "number_in_clause": 0,
                                  "type": "variable"
                                },
                                {
                                  "number_in_clause": 1,
                                  "type": "variable"
                                }
                              ],
                              "functor": "*",
                              "type": "compound"
                            },
                            {
                              "type": "atomic",
                              "value": 100
                            }
                          ],
                          "functor": "div",
                          "type": "compound"
                        }
                      ],
                      "functor": "is",
                      "type": "compound"
                    },
                    "type": "goal"
                  },
                  {
                    "goal": {
                      "arguments": [
                        {
                          "number_in_clause": 2,
                          "type": "variable"
                        },
                        {
                          "arguments": [
                            {
                              "number_in_clause": 0,
                              "type": "variable"
                            },
                            {
                              "number_in_clause": 3,
                              "type": "variable"
                            }
                          ],
                          "functor": "-",
                          "type": "compound"
                        }
                      ],
                      "functor": "is",
                      "type": "compound"
                    },
                    "type": "goal"
                  }
                ],
                "type": "conjunction"
              },
              "head": {
                "arguments": [
                  {
                    "number_in_clause": 0,
                    "type": "variable"
                  },
                  {
                    "type": "atomic",
                    "value": "percent"
                  },
                  {
                    "number_in_clause": 1,
                    "type": "variable"
                  },
                  {
                    "number_in_clause": 2,
                    "type": "variable"
                  }
                ],
                "functor": "applySupport",
                "module": "policy",
                "type": "compound"
              },
              "index": 2
            }
          ],
          "predicate_name": "applySupport"
        },
        {
          "arity": 3,
          "clauses": [
            {
              "body": {
                "subgoals": [
                  {
                    "goal": {
                      "arguments": [
                        {
                          "number_in_clause": 0,
                          "type": "variable"
                        },
                        {
                          "number_in_clause": 2,
                          "type": "variable"
                        },
                        {
                          "number_in_clause": 3,
                          "type": "variable"
                        },
                        {
                          "number_in_clause": 6,
                          "type": "variable"
                        }
                      ],
                      "functor": "applySupport",
                      "type": "compound"
                    },
                    "type": "goal"
                  },
                  {
                    "goal": {
                      "arguments": [
                        {
                          "number_in_clause": 6,
                          "type": "variable"
                        },
                        {
                          "number_in_clause": 4,
                          "type": "variable"
                        },
                        {
                          "number_in_clause": 5,
                          "type": "variable"
                        }
                      ],
                      "functor": "applySocialSupports",
                      "type": "compound"
                    },
                    "type": "goal"
                  }
                ],
                "type": "conjunction"
              },
              "head": {
                "arguments": [
                  {
                    "number_in_clause": 0,
                    "type": "variable"
                  },
                  {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "number_in_clause": 1,
                            "type": "variable"
                          },
                          {
                            "arguments": [
                              {
                                "number_in_clause": 2,
                                "type": "variable"
                              },
                              {
                                "number_in_clause": 3,
                                "type": "variable"
                              }
                            ],
                            "functor": ",",
                            "type": "compound"
                          }
                        ],
                        "functor": ",",
                        "type": "compound"
                      },
                      {
                        "number_in_clause": 4,
                        "type": "variable"
                      }
                    ],
                    "functor": "[|]",
                    "type": "compound"
                  },
                  {
                    "number_in_clause": 5,
                    "type": "variable"
                  }
                ],
                "functor": "applySocialSupports",
                "module": "policy",
                "type": "compound"
              },
              "index": 1
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "number_in_clause": 0,
                    "type": "variable"
                  },
                  {
                    "type": "atomic",
                    "value": []
                  },
                  {
                    "number_in_clause": 0,
                    "type": "variable"
                  }
                ],
                "functor": "applySocialSupports",
                "module": "policy",
                "type": "compound"
              },
              "index": 2
            }
          ],
          "predicate_name": "applySocialSupports"
        },
        {
          "arity": 4,
          "clauses": [
            {
              "body": {
                "subgoals": [
                  {
                    "goal": {
                      "arguments": [
                        {
                          "number_in_clause": 2,
                          "type": "variable"
                        },
                        {
                          "number_in_clause": 1,
                          "type": "variable"
                        },
                        {
                          "number_in_clause": 4,
                          "type": "variable"
                        },
                        {
                          "number_in_clause": 5,
                          "type": "variable"
                        }
                      ],
                      "functor": "support_matrix",
                      "type": "compound"
                    },
                    "type": "goal"
                  },
                  {
                    "goal": {
                      "arguments": [
                        {
                          "number_in_clause": 0,
                          "type": "variable"
                        },
                        {
                          "number_in_clause": 4,
                          "type": "variable"
                        },
                        {
                          "number_in_clause": 5,
                          "type": "variable"
                        },
                        {
                          "number_in_clause": 3,
                          "type": "variable"
                        }
                      ],
                      "functor": "applySupport",
                      "type": "compound"
                    },
                    "type": "goal"
                  }
                ],
                "type": "conjunction"
              },
              "head": {
                "arguments": [
                  {
                    "number_in_clause": 0,
                    "type": "variable"
                  },
                  {
                    "number_in_clause": 1,
                    "type": "variable"
                  },
                  {
                    "number_in_clause": 2,
                    "type": "variable"
                  },
                  {
                    "number_in_clause": 3,
                    "type": "variable"
                  }
                ],
                "functor": "applySavingsSupport",
                "module": "policy",
                "type": "compound"
              },
              "index": 1
            }
          ],
          "predicate_name": "applySavingsSupport"
        },
        {
          "arity": 2,
          "clauses": [
            {
              "body": {
                "goal": {
                  "arguments": [
                    {
                      "number_in_clause": 1,
                      "type": "variable"
                    },
                    {
                      "arguments": [
                        {
                          "number_in_clause": 0,
                          "type": "variable"
                        },
                        {
                          "type": "atomic",
                          "value": 12
                        }
                      ],
                      "functor": "div",
                      "type": "compound"
                    }
                  ],
                  "functor": "is",
                  "type": "compound"
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "number_in_clause": 0,
                    "type": "variable"
                  },
                  {
                    "number_in_clause": 1,
                    "type": "variable"
                  }
                ],
                "functor": "rollingConsumption",
                "module": "policy",
                "type": "compound"
              },
              "index": 1
            }
          ],
          "predicate_name": "rollingConsumption"
        },
        {
          "arity": 2,
          "clauses": [
            {
              "body": {
                "subgoals": [
                  {
                    "goal": {
                      "arguments": [
                        {
                          "number_in_clause": 1,
                          "type": "variable"
                        },
                        {
                          "number_in_clause": 3,
                          "type": "variable"
                        }
                      ],
                      "functor": "sumOfMonthlyConsumptions",
                      "type": "compound"
                    },
                    "type": "goal"
                  },
                  {
                    "goal": {
                      "arguments": [
                        {
                          "number_in_clause": 2,
                          "type": "variable"
                        },
                        {
                          "arguments": [
                            {
                              "number_in_clause": 3,
                              "type": "variable"
                            },
                            {
                              "number_in_clause": 0,
                              "type": "variable"
                            }
                          ],
                          "functor": "+",
                          "type": "compound"
                        }
                      ],
                      "functor": "is",
                      "type": "compound"
                    },
                    "type": "goal"
                  }
                ],
                "type": "conjunction"
              },
              "head": {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "number_in_clause": 0,
                        "type": "variable"
                      },
                      {
                        "number_in_clause": 1,
                        "type": "variable"
                      }
                    ],
                    "functor": "[|]",
                    "type": "compound"
                  },
                  {
                    "number_in_clause": 2,
                    "type": "variable"
                  }
                ],
                "functor": "sumOfMonthlyConsumptions",
                "module": "policy",
                "type": "compound"
              },
              "index": 1
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": []
                  },
                  {
                    "type": "atomic",
                    "value": 0
                  }
                ],
                "functor": "sumOfMonthlyConsumptions",
                "module": "policy",
                "type": "compound"
              },
              "index": 2
            }
          ],
          "predicate_name": "sumOfMonthlyConsumptions"
        },
        {
          "arity": 1,
          "clauses": [
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "type": "atomic",
                        "value": 2001
                      },
                      {
                        "arguments": [
                          {
                            "type": "atomic",
                            "value": 2001
                          },
                          {
                            "arguments": [
                              {
                                "type": "atomic",
                                "value": 2001
                              },
                              {
                                "arguments": [
                                  {
                                    "type": "atomic",
                                    "value": 2001
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "type": "atomic",
                                        "value": 2001
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "type": "atomic",
                                            "value": 2001
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "type": "atomic",
                                                "value": 2000
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "type": "atomic",
                                                    "value": 2000
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "type": "atomic",
                                                        "value": 2000
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "type": "atomic",
                                                            "value": 2000
                                                          },
                                                          {
                                                            "arguments": [
                                                              {
                                                                "type": "atomic",
                                                                "value": 2000
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "type": "atomic",
                                                                    "value": 2000
                                                                  },
                                                                  {
                                                                    "type": "atomic",
                                                                    "value": []
                                                                  }
                                                                ],
                                                                "functor": "[|]",
                                                                "type": "compound"
                                                              }
                                                            ],
                                                            "functor": "[|]",
                                                            "type": "compound"
                                                          }
                                                        ],
                                                        "functor": "[|]",
                                                        "type": "compound"
                                                      }
                                                    ],
                                                    "functor": "[|]",
                                                    "type": "compound"
                                                  }
                                                ],
                                                "functor": "[|]",
                                                "type": "compound"
                                              }
                                            ],
                                            "functor": "[|]",
                                            "type": "compound"
                                          }
                                        ],
                                        "functor": "[|]",
                                        "type": "compound"
                                      }
                                    ],
                                    "functor": "[|]",
                                    "type": "compound"
                                  }
                                ],
                                "functor": "[|]",
                                "type": "compound"
                              }
                            ],
                            "functor": "[|]",
                            "type": "compound"
                          }
                        ],
                        "functor": "[|]",
                        "type": "compound"
                      }
                    ],
                    "functor": "[|]",
                    "type": "compound"
                  }
                ],
                "functor": "monthlyConsumptions",
                "module": "policy",
                "type": "compound"
              },
              "index": 1
            }
          ],
          "predicate_name": "monthlyConsumptions"
        },
        {
          "arity": 2,
          "clauses": [
            {
              "body": {
                "subgoals": [
                  {
                    "goal": {
                      "arguments": [
                        {
                          "type": "atomic",
                          "value": "high"
                        },
                        {
                          "number_in_clause": 2,
                          "type": "variable"
                        }
                      ],
                      "functor": "rolling_treshold",
                      "type": "compound"
                    },
                    "type": "goal"
                  },
                  {
                    "subgoals": [
                      {
                        "goal": {
                          "arguments": [
                            {
                              "number_in_clause": 0,
                              "type": "variable"
                            },
                            {
                              "number_in_clause": 2,
                              "type": "variable"
                            }
                          ],
                          "functor": ">",
                          "type": "compound"
                        },
                        "type": "goal"
                      },
                      {
                        "goal": {
                          "arguments": [
                            {
                              "number_in_clause": 1,
                              "type": "variable"
                            },
                            {
                              "type": "atomic",
                              "value": "high"
                            }
                          ],
                          "functor": "=",
                          "type": "compound"
                        },
                        "type": "goal"
                      }
                    ],
                    "type": "conjunction"
                  }
                ],
                "type": "conjunction"
              },
              "head": {
                "arguments": [
                  {
                    "number_in_clause": 0,
                    "type": "variable"
                  },
                  {
                    "number_in_clause": 1,
                    "type": "variable"
                  }
                ],
                "functor": "consumptionClass",
                "module": "policy",
                "type": "compound"
              },
              "index": 1
            },
            {
              "body": {
                "subgoals": [
                  {
                    "goal": {
                      "arguments": [
                        {
                          "type": "atomic",
                          "value": "mid"
                        },
                        {
                          "number_in_clause": 2,
                          "type": "variable"
                        }
                      ],
                      "functor": "rolling_treshold",
                      "type": "compound"
                    },
                    "type": "goal"
                  },
                  {
                    "subgoals": [
                      {
                        "goal": {
                          "arguments": [
                            {
                              "number_in_clause": 0,
                              "type": "variable"
                            },
                            {
                              "number_in_clause": 2,
                              "type": "variable"
                            }
                          ],
                          "functor": ">",
                          "type": "compound"
                        },
                        "type": "goal"
                      },
                      {
                        "goal": {
                          "arguments": [
                            {
                              "number_in_clause": 1,
                              "type": "variable"
                            },
                            {
                              "type": "atomic",
                              "value": "mid"
                            }
                          ],
                          "functor": "=",
                          "type": "compound"
                        },
                        "type": "goal"
                      }
                    ],
                    "type": "conjunction"
                  }
                ],
                "type": "conjunction"
              },
              "head": {
                "arguments": [
                  {
                    "number_in_clause": 0,
                    "type": "variable"
                  },
                  {
                    "number_in_clause": 1,
                    "type": "variable"
                  }
                ],
                "functor": "consumptionClass",
                "module": "policy",
                "type": "compound"
              },
              "index": 2
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "number_in_clause": 0,
                    "type": "variable"
                  },
                  {
                    "type": "atomic",
                    "value": "low"
                  }
                ],
                "functor": "consumptionClass",
                "module": "policy",
                "type": "compound"
              },
              "index": 3
            }
          ],
          "predicate_name": "consumptionClass"
        },
        {
          "arity": 3,
          "clauses": [
            {
              "body": {
                "subgoals": [
                  {
                    "subgoals": [
                      {
                        "goal": {
                          "arguments": [
                            {
                              "type": "atomic",
                              "value": "high"
                            },
                            {
                              "number_in_clause": 3,
                              "type": "variable"
                            }
                          ],
                          "functor": "savings_treshold",
                          "type": "compound"
                        },
                        "type": "goal"
                      },
                      {
                        "subgoals": [
                          {
                            "goal": {
                              "arguments": [
                                {
                                  "number_in_clause": 4,
                                  "type": "variable"
                                },
                                {
                                  "arguments": [
                                    {
                                      "number_in_clause": 0,
                                      "type": "variable"
                                    },
                                    {
                                      "number_in_clause": 1,
                                      "type": "variable"
                                    }
                                  ],
                                  "functor": "-",
                                  "type": "compound"
                                }
                              ],
                              "functor": "is",
                              "type": "compound"
                            },
                            "type": "goal"
                          },
                          {
                            "subgoals": [
                              {
                                "goal": {
                                  "arguments": [
                                    {
                                      "number_in_clause": 4,
                                      "type": "variable"
                                    },
                                    {
                                      "number_in_clause": 3,
                                      "type": "variable"
                                    }
                                  ],
                                  "functor": ">",
                                  "type": "compound"
                                },
                                "type": "goal"
                              },
                              {
                                "goal": {
                                  "arguments": [
                                    {
                                      "number_in_clause": 2,
                                      "type": "variable"
                                    },
                                    {
                                      "type": "atomic",
                                      "value": "high"
                                    }
                                  ],
                                  "functor": "=",
                                  "type": "compound"
                                },
                                "type": "goal"
                              }
                            ],
                            "type": "conjunction"
                          }
                        ],
                        "type": "conjunction"
                      }
                    ],
                    "type": "conjunction"
                  },
                  {
                    "subgoals": [
                      {
                        "subgoals": [
                          {
                            "goal": {
                              "arguments": [
                                {
                                  "type": "atomic",
                                  "value": "mid"
                                },
                                {
                                  "number_in_clause": 3,
                                  "type": "variable"
                                }
                              ],
                              "functor": "savings_treshold",
                              "type": "compound"
                            },
                            "type": "goal"
                          },
                          {
                            "subgoals": [
                              {
                                "goal": {
                                  "arguments": [
                                    {
                                      "number_in_clause": 4,
                                      "type": "variable"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "number_in_clause": 0,
                                          "type": "variable"
                                        },
                                        {
                                          "number_in_clause": 1,
                                          "type": "variable"
                                        }
                                      ],
                                      "functor": "-",
                                      "type": "compound"
                                    }
                                  ],
                                  "functor": "is",
                                  "type": "compound"
                                },
                                "type": "goal"
                              },
                              {
                                "subgoals": [
                                  {
                                    "goal": {
                                      "arguments": [
                                        {
                                          "number_in_clause": 4,
                                          "type": "variable"
                                        },
                                        {
                                          "number_in_clause": 3,
                                          "type": "variable"
                                        }
                                      ],
                                      "functor": ">",
                                      "type": "compound"
                                    },
                                    "type": "goal"
                                  },
                                  {
                                    "goal": {
                                      "arguments": [
                                        {
                                          "number_in_clause": 2,
                                          "type": "variable"
                                        },
                                        {
                                          "type": "atomic",
                                          "value": "mid"
                                        }
                                      ],
                                      "functor": "=",
                                      "type": "compound"
                                    },
                                    "type": "goal"
                                  }
                                ],
                                "type": "conjunction"
                              }
                            ],
                            "type": "conjunction"
                          }
                        ],
                        "type": "conjunction"
                      },
                      {
                        "subgoals": [
                          {
                            "subgoals": [
                              {
                                "goal": {
                                  "arguments": [
                                    {
                                      "type": "atomic",
                                      "value": "low"
                                    },
                                    {
                                      "number_in_clause": 3,
                                      "type": "variable"
                                    }
                                  ],
                                  "functor": "savings_treshold",
                                  "type": "compound"
                                },
                                "type": "goal"
                              },
                              {
                                "subgoals": [
                                  {
                                    "goal": {
                                      "arguments": [
                                        {
                                          "number_in_clause": 4,
                                          "type": "variable"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "number_in_clause": 0,
                                              "type": "variable"
                                            },
                                            {
                                              "number_in_clause": 1,
                                              "type": "variable"
                                            }
                                          ],
                                          "functor": "-",
                                          "type": "compound"
                                        }
                                      ],
                                      "functor": "is",
                                      "type": "compound"
                                    },
                                    "type": "goal"
                                  },
                                  {
                                    "subgoals": [
                                      {
                                        "goal": {
                                          "arguments": [
                                            {
                                              "number_in_clause": 4,
                                              "type": "variable"
                                            },
                                            {
                                              "number_in_clause": 3,
                                              "type": "variable"
                                            }
                                          ],
                                          "functor": ">",
                                          "type": "compound"
                                        },
                                        "type": "goal"
                                      },
                                      {
                                        "goal": {
                                          "arguments": [
                                            {
                                              "number_in_clause": 2,
                                              "type": "variable"
                                            },
                                            {
                                              "type": "atomic",
                                              "value": "low"
                                            }
                                          ],
                                          "functor": "=",
                                          "type": "compound"
                                        },
                                        "type": "goal"
                                      }
                                    ],
                                    "type": "conjunction"
                                  }
                                ],
                                "type": "conjunction"
                              }
                            ],
                            "type": "conjunction"
                          },
                          {
                            "goal": {
                              "arguments": [
                                {
                                  "number_in_clause": 2,
                                  "type": "variable"
                                },
                                {
                                  "type": "atomic",
                                  "value": "none"
                                }
                              ],
                              "functor": "=",
                              "type": "compound"
                            },
                            "type": "goal"
                          }
                        ],
                        "type": "disjunction"
                      }
                    ],
                    "type": "disjunction"
                  }
                ],
                "type": "disjunction"
              },
              "head": {
                "arguments": [
                  {
                    "number_in_clause": 0,
                    "type": "variable"
                  },
                  {
                    "number_in_clause": 1,
                    "type": "variable"
                  },
                  {
                    "number_in_clause": 2,
                    "type": "variable"
                  }
                ],
                "functor": "savingsClass",
                "module": "policy",
                "type": "compound"
              },
              "index": 1
            }
          ],
          "predicate_name": "savingsClass"
        },
        {
          "arity": 1,
          "clauses": [
            {
              "body": {
                "subgoals": [
                  {
                    "goal": {
                      "arguments": [
                        {
                          "number_in_clause": 1,
                          "type": "variable"
                        }
                      ],
                      "functor": "currentConsumption",
                      "type": "compound"
                    },
                    "type": "goal"
                  },
                  {
                    "subgoals": [
                      {
                        "goal": {
                          "arguments": [
                            {
                              "number_in_clause": 2,
                              "type": "variable"
                            },
                            {
                              "type": "atomic",
                              "value": "HUF"
                            }
                          ],
                          "functor": "currentPrice",
                          "type": "compound"
                        },
                        "type": "goal"
                      },
                      {
                        "goal": {
                          "arguments": [
                            {
                              "number_in_clause": 0,
                              "type": "variable"
                            },
                            {
                              "arguments": [
                                {
                                  "number_in_clause": 2,
                                  "type": "variable"
                                },
                                {
                                  "number_in_clause": 1,
                                  "type": "variable"
                                }
                              ],
                              "functor": "*",
                              "type": "compound"
                            }
                          ],
                          "functor": "is",
                          "type": "compound"
                        },
                        "type": "goal"
                      }
                    ],
                    "type": "conjunction"
                  }
                ],
                "type": "conjunction"
              },
              "head": {
                "arguments": [
                  {
                    "number_in_clause": 0,
                    "type": "variable"
                  }
                ],
                "functor": "priceBase",
                "module": "policy",
                "type": "compound"
              },
              "index": 1
            }
          ],
          "predicate_name": "priceBase"
        },
        {
          "arity": 1,
          "clauses": [
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "type": "atomic",
                            "value": "ChangedWorkcapacityCredential"
                          },
                          {
                            "arguments": [
                              {
                                "type": "atomic",
                                "value": "nominal"
                              },
                              {
                                "type": "atomic",
                                "value": 10000
                              }
                            ],
                            "functor": ",",
                            "type": "compound"
                          }
                        ],
                        "functor": ",",
                        "type": "compound"
                      },
                      {
                        "type": "atomic",
                        "value": []
                      }
                    ],
                    "functor": "[|]",
                    "type": "compound"
                  }
                ],
                "functor": "socialCreds",
                "module": "policy",
                "type": "compound"
              },
              "index": 1
            }
          ],
          "predicate_name": "socialCreds"
        }
      ]
    },
    {
      "module_name": "policy_matrix",
      "predicates": [
        {
          "arity": 3,
          "clauses": [
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": "ChangedWorkcapacityCredential"
                  },
                  {
                    "type": "atomic",
                    "value": "nominal"
                  },
                  {
                    "type": "atomic",
                    "value": 10000
                  }
                ],
                "functor": "social_suport",
                "module": "policy_matrix",
                "type": "compound"
              },
              "index": 1
            }
          ],
          "predicate_name": "social_suport"
        },
        {
          "arity": 2,
          "clauses": [
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": "low"
                  },
                  {
                    "type": "atomic",
                    "value": 0
                  }
                ],
                "functor": "rolling_treshold",
                "module": "policy_matrix",
                "type": "compound"
              },
              "index": 1
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": "mid"
                  },
                  {
                    "type": "atomic",
                    "value": 3000
                  }
                ],
                "functor": "rolling_treshold",
                "module": "policy_matrix",
                "type": "compound"
              },
              "index": 2
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": "high"
                  },
                  {
                    "type": "atomic",
                    "value": 7000
                  }
                ],
                "functor": "rolling_treshold",
                "module": "policy_matrix",
                "type": "compound"
              },
              "index": 3
            }
          ],
          "predicate_name": "rolling_treshold"
        },
        {
          "arity": 2,
          "clauses": [
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": "low"
                  },
                  {
                    "type": "atomic",
                    "value": 250
                  }
                ],
                "functor": "savings_treshold",
                "module": "policy_matrix",
                "type": "compound"
              },
              "index": 1
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": "mid"
                  },
                  {
                    "type": "atomic",
                    "value": 500
                  }
                ],
                "functor": "savings_treshold",
                "module": "policy_matrix",
                "type": "compound"
              },
              "index": 2
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": "high"
                  },
                  {
                    "type": "atomic",
                    "value": 1000
                  }
                ],
                "functor": "savings_treshold",
                "module": "policy_matrix",
                "type": "compound"
              },
              "index": 3
            }
          ],
          "predicate_name": "savings_treshold"
        },
        {
          "arity": 4,
          "clauses": [
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": "low"
                  },
                  {
                    "type": "atomic",
                    "value": "low"
                  },
                  {
                    "type": "atomic",
                    "value": "nominal"
                  },
                  {
                    "type": "atomic",
                    "value": 500
                  }
                ],
                "functor": "support_matrix",
                "module": "policy_matrix",
                "type": "compound"
              },
              "index": 1
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": "low"
                  },
                  {
                    "type": "atomic",
                    "value": "mid"
                  },
                  {
                    "type": "atomic",
                    "value": "percent"
                  },
                  {
                    "type": "atomic",
                    "value": 10
                  }
                ],
                "functor": "support_matrix",
                "module": "policy_matrix",
                "type": "compound"
              },
              "index": 2
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": "low"
                  },
                  {
                    "type": "atomic",
                    "value": "high"
                  },
                  {
                    "type": "atomic",
                    "value": "nominal"
                  },
                  {
                    "type": "atomic",
                    "value": 500
                  }
                ],
                "functor": "support_matrix",
                "module": "policy_matrix",
                "type": "compound"
              },
              "index": 3
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": "mid"
                  },
                  {
                    "type": "atomic",
                    "value": "low"
                  },
                  {
                    "type": "atomic",
                    "value": "nominal"
                  },
                  {
                    "type": "atomic",
                    "value": 500
                  }
                ],
                "functor": "support_matrix",
                "module": "policy_matrix",
                "type": "compound"
              },
              "index": 4
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": "mid"
                  },
                  {
                    "type": "atomic",
                    "value": "mid"
                  },
                  {
                    "type": "atomic",
                    "value": "nominal"
                  },
                  {
                    "type": "atomic",
                    "value": 500
                  }
                ],
                "functor": "support_matrix",
                "module": "policy_matrix",
                "type": "compound"
              },
              "index": 5
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": "mid"
                  },
                  {
                    "type": "atomic",
                    "value": "high"
                  },
                  {
                    "type": "atomic",
                    "value": "nominal"
                  },
                  {
                    "type": "atomic",
                    "value": 500
                  }
                ],
                "functor": "support_matrix",
                "module": "policy_matrix",
                "type": "compound"
              },
              "index": 6
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": "high"
                  },
                  {
                    "type": "atomic",
                    "value": "low"
                  },
                  {
                    "type": "atomic",
                    "value": "nominal"
                  },
                  {
                    "type": "atomic",
                    "value": 500
                  }
                ],
                "functor": "support_matrix",
                "module": "policy_matrix",
                "type": "compound"
              },
              "index": 7
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": "high"
                  },
                  {
                    "type": "atomic",
                    "value": "mid"
                  },
                  {
                    "type": "atomic",
                    "value": "nominal"
                  },
                  {
                    "type": "atomic",
                    "value": 500
                  }
                ],
                "functor": "support_matrix",
                "module": "policy_matrix",
                "type": "compound"
              },
              "index": 8
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": "high"
                  },
                  {
                    "type": "atomic",
                    "value": "high"
                  },
                  {
                    "type": "atomic",
                    "value": "nominal"
                  },
                  {
                    "type": "atomic",
                    "value": 500
                  }
                ],
                "functor": "support_matrix",
                "module": "policy_matrix",
                "type": "compound"
              },
              "index": 9
            }
          ],
          "predicate_name": "support_matrix"
        }
      ]
    },
    {
      "module_name": "policy_input",
      "predicates": [
        {
          "arity": 1,
          "clauses": [
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": 1400
                  }
                ],
                "functor": "currentConsumption",
                "module": "policy_input",
                "type": "compound"
              },
              "index": 1
            }
          ],
          "predicate_name": "currentConsumption"
        },
        {
          "arity": 2,
          "clauses": [
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": 1
                  },
                  {
                    "type": "atomic",
                    "value": 2001
                  }
                ],
                "functor": "monthly_consumption",
                "module": "policy_input",
                "type": "compound"
              },
              "index": 1
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": 2
                  },
                  {
                    "type": "atomic",
                    "value": 2001
                  }
                ],
                "functor": "monthly_consumption",
                "module": "policy_input",
                "type": "compound"
              },
              "index": 2
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": 3
                  },
                  {
                    "type": "atomic",
                    "value": 2001
                  }
                ],
                "functor": "monthly_consumption",
                "module": "policy_input",
                "type": "compound"
              },
              "index": 3
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": 4
                  },
                  {
                    "type": "atomic",
                    "value": 2001
                  }
                ],
                "functor": "monthly_consumption",
                "module": "policy_input",
                "type": "compound"
              },
              "index": 4
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": 5
                  },
                  {
                    "type": "atomic",
                    "value": 2001
                  }
                ],
                "functor": "monthly_consumption",
                "module": "policy_input",
                "type": "compound"
              },
              "index": 5
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": 6
                  },
                  {
                    "type": "atomic",
                    "value": 2001
                  }
                ],
                "functor": "monthly_consumption",
                "module": "policy_input",
                "type": "compound"
              },
              "index": 6
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": 7
                  },
                  {
                    "type": "atomic",
                    "value": 2000
                  }
                ],
                "functor": "monthly_consumption",
                "module": "policy_input",
                "type": "compound"
              },
              "index": 7
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": 8
                  },
                  {
                    "type": "atomic",
                    "value": 2000
                  }
                ],
                "functor": "monthly_consumption",
                "module": "policy_input",
                "type": "compound"
              },
              "index": 8
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": 9
                  },
                  {
                    "type": "atomic",
                    "value": 2000
                  }
                ],
                "functor": "monthly_consumption",
                "module": "policy_input",
                "type": "compound"
              },
              "index": 9
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": 10
                  },
                  {
                    "type": "atomic",
                    "value": 2000
                  }
                ],
                "functor": "monthly_consumption",
                "module": "policy_input",
                "type": "compound"
              },
              "index": 10
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": 11
                  },
                  {
                    "type": "atomic",
                    "value": 2000
                  }
                ],
                "functor": "monthly_consumption",
                "module": "policy_input",
                "type": "compound"
              },
              "index": 11
            },
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": 12
                  },
                  {
                    "type": "atomic",
                    "value": 2000
                  }
                ],
                "functor": "monthly_consumption",
                "module": "policy_input",
                "type": "compound"
              },
              "index": 12
            }
          ],
          "predicate_name": "monthly_consumption"
        },
        {
          "arity": 1,
          "clauses": [
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": 931220
                  }
                ],
                "functor": "inputPayment",
                "module": "policy_input",
                "type": "compound"
              },
              "index": 1
            }
          ],
          "predicate_name": "inputPayment"
        },
        {
          "arity": 2,
          "clauses": [
            {
              "body": {
                "goal": {
                  "type": "atomic",
                  "value": true
                },
                "type": "goal"
              },
              "head": {
                "arguments": [
                  {
                    "type": "atomic",
                    "value": 747
                  },
                  {
                    "type": "atomic",
                    "value": "HUF"
                  }
                ],
                "functor": "currentPrice",
                "module": "policy_input",
                "type": "compound"
              },
              "index": 1
            }
          ],
          "predicate_name": "currentPrice"
        }
      ]
    }
  ]
}
